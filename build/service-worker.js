"use strict";var precacheConfig=[["/Google_auth_provider/index.html","b6475dc4c2dd36ebb599a044da790e1a"],["/Google_auth_provider/static/css/main.57586be5.css","77cbe56b15602392d12d415478583f7b"],["/Google_auth_provider/static/js/main.c8843d53.js","e2b6ee4ab4ff276779a2569583a3ac47"],["/Google_auth_provider/static/media/icon_upload.53771798.svg","53771798877e88bccc275e15ba634a83"],["/Google_auth_provider/static/media/styles.05de2807.scss","05de2807387e51c906dd5a4be5496f5d"],["/Google_auth_provider/static/media/styles.36e4823a.scss","36e4823a16be533c2863e30408c7bc0b"],["/Google_auth_provider/static/media/styles.40d31500.scss","40d315008fd5da0da84d12849663354d"],["/Google_auth_provider/static/media/styles.4b961a8f.scss","4b961a8ffc1ed849eb94ad2a2ebd59fc"],["/Google_auth_provider/static/media/styles.4fdd5cf6.scss","4fdd5cf648deb414e9875ca6f161efac"],["/Google_auth_provider/static/media/styles.5412d8b8.scss","5412d8b82dfe7797288854fb10006098"],["/Google_auth_provider/static/media/styles.6fbb4e42.scss","6fbb4e4269d59f4ad68e08689d3233bd"],["/Google_auth_provider/static/media/styles.a3ae92ff.scss","a3ae92ff532433ee2e907e99a23ef586"],["/Google_auth_provider/static/media/styles.b5347a0e.scss","b5347a0ece659ae47483c390bdb61b17"],["/Google_auth_provider/static/media/styles.b6e8d7e6.scss","b6e8d7e66c9cc35cc08da36e56a41ca3"],["/Google_auth_provider/static/media/styles.cc375e59.scss","cc375e59eb77a0a7793a395f2d3b2447"],["/Google_auth_provider/static/media/styles.cc6699cf.scss","cc6699cf936a02c986a4d672d3bd325c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,r){var s=new URL(e);return r&&s.pathname.match(r)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],r=new URL(t,self.location),s=createCacheKey(r,hashParamName,a,/\.\w{8}\./);return[r.toString(),s]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var r=new Request(a,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),r="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,r),t=urlsToCacheKeys.has(a));var s="/Google_auth_provider/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(s,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});